# Production Docker Compose for Oracle VM with NGINX Proxy
version: '3.8'

networks:
  mcp-internal:
    driver: bridge
    internal: false  # Allow external access for OAuth callbacks
    ipam:
      config:
        - subnet: 172.20.0.0/16

services:
  calendar-mcp:
    build: .
    container_name: calendar-mcp-prod
    restart: unless-stopped
    
    # Internal network only - no port exposure to host
    networks:
      - mcp-internal
    
    # Environment configuration
    environment:
      - TRANSPORT=http
      - HOST=0.0.0.0
      - PORT=3000
      - NODE_ENV=production
      - GOOGLE_OAUTH_CREDENTIALS=/app/gcp-oauth.keys.json
    
    # OAuth credentials and token storage
    volumes:
      - ./gcp-oauth.keys.json:/app/gcp-oauth.keys.json:ro
      - calendar-tokens:/home/nodejs/.config/google-calendar-mcp
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: "1.0"
        reservations:
          memory: 256M
          cpus: "0.5"
    
    # Security options
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:rw,noexec,nosuid,size=100m
    
    # Health check
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx-proxy:
    image: nginx:alpine
    container_name: nginx-mcp-proxy
    restart: unless-stopped
    
    networks:
      - mcp-internal
    
    # Expose only HTTPS to the world
    ports:
      - "80:80"   # For Let's Encrypt challenges
      - "443:443" # HTTPS
    
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/auth:/etc/nginx/auth:ro
      - nginx-logs:/var/log/nginx
    
    depends_on:
      calendar-mcp:
        condition: service_healthy
    
    # Security
    security_opt:
      - no-new-privileges:true

volumes:
  calendar-tokens:
    driver: local
  nginx-logs:
    driver: local