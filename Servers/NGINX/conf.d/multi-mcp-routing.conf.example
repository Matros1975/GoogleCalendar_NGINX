# Multi-MCP Server Routing Configuration Template
# This file demonstrates how to configure NGINX to route to multiple MCP servers
# Copy this file and customize for your deployment

# Example: Path-based routing (/calendar/* and /othermcp/*)
# Uncomment and modify as needed

# Upstream for additional MCP service
# upstream other_mcp_backend {
#     server other-mcp:3000;
#     keepalive 32;
# }

# Additional MCP endpoints - require bearer token authentication
# location /othermcp/ {
#     # IP allowlist check (SECURITY ENHANCEMENT)
#     if ($allowed_client = 0) {
#         return 403 '{"error":"Access denied","message":"IP address not authorized"}';
#     }
#     
#     # Authentication subrequest
#     auth_request /auth;
#     
#     # Set variables from auth response
#     auth_request_set $auth_result $upstream_http_x_auth_result;
#     auth_request_set $bearer_valid $upstream_http_x_bearer_valid;
#     
#     # Forward to other MCP service
#     proxy_pass http://other_mcp_backend/;
#     proxy_http_version 1.1;
#     proxy_set_header Upgrade $http_upgrade;
#     proxy_set_header Connection "upgrade";
#     proxy_set_header Host $host;
#     proxy_set_header X-Real-IP $remote_addr;
#     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     proxy_set_header X-Forwarded-Proto $scheme;
#     proxy_set_header Authorization $http_authorization;
#     
#     # Timeouts
#     proxy_connect_timeout 60s;
#     proxy_send_timeout 60s;
#     proxy_read_timeout 60s;
#     
#     # Buffer settings for MCP streaming
#     proxy_buffering off;
#     proxy_cache off;
# }

# Alternative: Subdomain-based routing
# Create a separate server block for each MCP service
# Example: calendar.yourdomain.com and othermcp.yourdomain.com

# server {
#     listen 443 ssl http2;
#     server_name othermcp.yourdomain.com;
#     
#     # SSL Configuration (same as main server)
#     ssl_certificate /etc/ssl/certs/yourdomain.crt;
#     ssl_certificate_key /etc/ssl/private/yourdomain.key;
#     ssl_protocols TLSv1.2 TLSv1.3;
#     # ... other SSL settings ...
#     
#     # Rate limiting
#     limit_req zone=api burst=20 nodelay;
#     
#     # Health check endpoint (no auth required)
#     location /health {
#         proxy_pass http://other_mcp_backend/health;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }
#     
#     # MCP endpoints - require bearer token authentication
#     location / {
#         # IP allowlist check
#         if ($allowed_client = 0) {
#             return 403 '{"error":"Access denied","message":"IP address not authorized"}';
#         }
#         
#         # Authentication subrequest
#         auth_request /auth;
#         
#         # Forward to MCP service
#         proxy_pass http://other_mcp_backend;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "upgrade";
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_set_header Authorization $http_authorization;
#         
#         # Timeouts and buffer settings
#         proxy_connect_timeout 60s;
#         proxy_send_timeout 60s;
#         proxy_read_timeout 60s;
#         proxy_buffering off;
#         proxy_cache off;
#     }
# }
